{"version":3,"sources":["components/Header.js","helper.js","components/Form.js","components/Summary.js","components/Result.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["ContainerHeader","styled","header","TextHeader","h1","Header","title","capitalizeText","text","charAt","toUpperCase","slice","Field","div","Label","label","Select","select","InputRatio","input","Button","button","Error","Form","saveSummary","saveCharging","useState","brand","year","plan","data","saveData","error","saveError","getData","e","target","name","value","onSubmit","preventDefault","trim","result","diff","Date","getFullYear","getDiffYear","increment","calcBrand","incrementPlan","getPlan","parseFloat","toFixed","setTimeout","quotation","Number","htmlFor","id","onChange","type","checked","ContainerSummary","Summary","Message","p","ResultQuotation","TextQuotation","Result","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Container","ContainerForm","App","summary","charging","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.dd28e1a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContainerHeader = styled.header`\r\n  background-color : #1870A0;\r\n  padding : .8rem;\r\n  font-weight: bold;\r\n  color: #fff;\r\n`;\r\n\r\nconst TextHeader = styled.h1`\r\n  font-size: 2rem;\r\n  margin: 0;\r\n  font-family: 'Slabo 27px',serif;\r\n  text-align: center;\r\n`;\r\nconst Header = ({title}) => {\r\n  return ( \r\n    <ContainerHeader>\r\n      <TextHeader>{title}</TextHeader>\r\n    </ContainerHeader>\r\n   );\r\n}\r\n\r\nHeader.propTypes = {\r\n  title : PropTypes.string.isRequired\r\n}\r\nexport default Header;","//Obtiene diferencia de a単os\r\nexport function getDiffYear(year){\r\n  return new Date().getFullYear() - year;\r\n}\r\n\r\n//calcula el total a pagar segun la marca\r\nexport function calcBrand(brand){\r\n  let increment;\r\n\r\n  switch(brand){\r\n    case 'european':\r\n      increment = 1.30;\r\n      break;\r\n    case 'american':\r\n      increment = 1.15;\r\n      break;\r\n    case 'asiatic':\r\n      increment = 1.05;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return increment;\r\n}\r\n\r\n// Calcula el tipo de seguro\r\n\r\nexport function getPlan(plan){\r\n  return (plan ==='basico') ? 1.20 : 1.50;\r\n}\r\n\r\n//Capitalize\r\nexport function capitalizeText(text){\r\n  return text.charAt(0).toUpperCase() + text.slice(1);\r\n} ","import React,{useState} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { getDiffYear,calcBrand ,getPlan} from '../helper';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Field = styled.div`\r\n  display: flex;\r\n  margin-bottom: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  flex: 0 0 5rem;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  border: 2px solid #e1e1e1;\r\n  border-radius: 3px;\r\n  appearance: none;\r\n`;\r\nconst InputRatio = styled.input`\r\n  margin: 0 .6rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: #00838f;\r\n  font-size: 1rem;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  color : #fff;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  border: none;\r\n  transition: background-color .3s ease;\r\n  margin-top: 2rem;\r\n  &:hover{\r\n    cursor: pointer;\r\n    background-color: #26c6da;\r\n  }\r\n`;\r\n\r\nconst Error = styled.div`\r\n  background-color: red;\r\n  color :white;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  text-align:center;\r\n  margin-bottom:2rem;\r\n`;\r\n\r\nconst Form = ({saveSummary,saveCharging}) => {\r\n\r\n  const [ data , saveData] = useState({\r\n    brand : '',\r\n    year : '',\r\n    plan: ''\r\n  });\r\n\r\n  const [error ,saveError] = useState(false);\r\n\r\n  const {brand ,year ,plan} = data;\r\n\r\n  const getData = e =>{\r\n    saveData({\r\n      ...data,\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = e =>{\r\n    e.preventDefault();\r\n    if(brand.trim() === '' || year.trim() === '' || plan.trim() === ''){\r\n      saveError(true);\r\n      return;\r\n    }\r\n    saveError(false);\r\n\r\n    //Base\r\n    let result = 2000;\r\n\r\n    //Obtener diferencia de a単os\r\n    const diff = getDiffYear(year);\r\n    // console.log(diff);\r\n\r\n    //Por cada a単o hay que restar el 3%\r\n    result -=  ((diff * 3) * result) /100;\r\n    // console.log(result);\r\n    //Americano 15%\r\n    //Asiatico 5%\r\n    //Europeo 30%\r\n    result = calcBrand(brand) * result;\r\n    // console.log(result);\r\n  \r\n    //Plan \r\n    //Basico aumenta 20%\r\n    // Completo 50%\r\n    const incrementPlan = getPlan(plan);\r\n    // console.log(incrementPlan);\r\n    result =parseFloat(incrementPlan * result).toFixed(2);\r\n    // console.log(result);\r\n  \r\n    saveCharging(true);\r\n\r\n    setTimeout(()=> {\r\n\r\n      //Elimina el Spinner\r\n      saveCharging(false);\r\n      //Total\r\n      //Pasa la informacion al componente principal\r\n      saveSummary({\r\n        quotation: Number(result),\r\n        data\r\n      });\r\n\r\n    },3000);\r\n\r\n  }\r\n\r\n\r\n  return ( \r\n    <form\r\n      onSubmit={handleSubmit}\r\n    >\r\n      {error ? <Error>Todos los Campos son obligatorios</Error>  : null}   \r\n      <Field>\r\n        <Label htmlFor=\"brand\">Marca</Label>\r\n        <Select \r\n          name=\"brand\"\r\n          id=\"brand\"\r\n          value={brand}\r\n          onChange={getData}\r\n        >\r\n          <option value=\"\">--Seleccione --</option>\r\n          <option value=\"american\">Americano</option>\r\n          <option value=\"european\">Europeo</option>\r\n          <option value=\"asiatic\">Asiatico</option>\r\n        </Select>\r\n      </Field>\r\n\r\n      <Field>\r\n        <Label htmlFor=\"year\">A単o</Label>\r\n        <Select \r\n          name=\"year\"\r\n          id=\"year\"\r\n          value={year}\r\n          onChange={getData}\r\n        >\r\n          <option value=\"\">-- Seleccione --</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2018\">2018</option>\r\n          <option value=\"2017\">2017</option>\r\n          <option value=\"2016\">2016</option>\r\n          <option value=\"2015\">2015</option>\r\n          <option value=\"2014\">2014</option>\r\n          <option value=\"2013\">2013</option>\r\n          <option value=\"2012\">2012</option>\r\n        </Select>\r\n      </Field>\r\n\r\n      <Field>\r\n        <Label>Plan</Label>\r\n        <InputRatio \r\n          type=\"radio\" \r\n          name=\"plan\" \r\n          id=\"basic\"\r\n          value=\"basic\"\r\n          checked={plan === \"basic\"}\r\n          onChange={getData}\r\n        />\r\n        <label htmlFor=\"basic\">Basico</label>\r\n        <InputRatio \r\n          type=\"radio\" \r\n          name=\"plan\" \r\n          id=\"complete\"\r\n          value=\"complete\"\r\n          checked={plan === \"complete\"}\r\n          onChange={getData}\r\n        />\r\n        <label htmlFor=\"complete\">Completo</label>\r\n      </Field>\r\n\r\n      <Button type=\"submit\">Cotizar</Button>\r\n      \r\n    </form>\r\n   );\r\n}\r\n\r\nForm.propTypes = {\r\n  saveSummary : PropTypes.func.isRequired,\r\n  saveCharging : PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { capitalizeText } from '../helper';\r\nimport PropTypes from 'prop-types';\r\nconst ContainerSummary = styled.div`\r\n  padding: 1rem;\r\n  text-align:center;\r\n  background-color: #00838f;\r\n  color: #fff;\r\n  margin-top: 1rem;\r\n`;\r\n\r\n\r\nconst Summary = ({data}) => {\r\n\r\n  const {brand,year,plan} = data;\r\n\r\n  if(brand === '' || year === '' || plan === '') return null;\r\n\r\n  return ( \r\n    <ContainerSummary>\r\n      <h2>Resumen de Cotizacion</h2>\r\n      <ul>\r\n        <li>Marca: {capitalizeText(brand)}</li>\r\n        <li>Plan: {capitalizeText(plan)}</li>\r\n        <li>A単o del Auto:  {year}</li>\r\n      </ul>\r\n    </ContainerSummary>\r\n  );\r\n}\r\n\r\nSummary.propTypes = {\r\n  data : PropTypes.object.isRequired\r\n}\r\nexport default Summary ;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nimport PropTypes from 'prop-types';\r\nconst Message = styled.p`\r\n  background-color: rgb(127,224,237);\r\n  margin-top: 2rem;\r\n  padding: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst ResultQuotation = styled.div`\r\n  text-align:center;\r\n  padding: .5rem;\r\n  border: 1px solid #26c6da;\r\n  background-color: rgb(127,224,237);\r\n  margin-top: 1rem;\r\n  position: relative;\r\n`;\r\n\r\nconst TextQuotation = styled.p`\r\n  color: #00838f;\r\n  padding: 1rem;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  margin:0;\r\n`;\r\n\r\nconst Result = ({quotation}) => {\r\n\r\n  return ( \r\n    (quotation === 0) \r\n    ? <Message>Elige marca, a単o y tipo de seguro</Message> \r\n    : (\r\n      <ResultQuotation>\r\n        <TransitionGroup\r\n          component='span'\r\n          className='result'\r\n        >\r\n          <CSSTransition\r\n            classNames='result'\r\n            key={quotation}\r\n            timeout={{enter:500,exit:500}}\r\n          >\r\n            <TextQuotation>El total es: $ <span>{quotation}</span></TextQuotation>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </ResultQuotation>\r\n    )\r\n  );\r\n}\r\n\r\nResult.propTypes = {\r\n  quotation: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return ( \r\n    <div className=\"sk-circle\">\r\n      <div className=\"sk-circle1 sk-child\"></div>\r\n      <div className=\"sk-circle2 sk-child\"></div>\r\n      <div className=\"sk-circle3 sk-child\"></div>\r\n      <div className=\"sk-circle4 sk-child\"></div>\r\n      <div className=\"sk-circle5 sk-child\"></div>\r\n      <div className=\"sk-circle6 sk-child\"></div>\r\n      <div className=\"sk-circle7 sk-child\"></div>\r\n      <div className=\"sk-circle8 sk-child\"></div>\r\n      <div className=\"sk-circle9 sk-child\"></div>\r\n      <div className=\"sk-circle10 sk-child\"></div>\r\n      <div className=\"sk-circle11 sk-child\"></div>\r\n      <div className=\"sk-circle12 sk-child\"></div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Spinner;","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport styled from '@emotion/styled';\nimport Form from './components/Form';\nimport Summary from './components/Summary';\nimport Result from './components/Result';\nimport Spinner from './components/Spinner';\n\nconst Container = styled.div`\n  max-width: 40rem;\n  margin: 0 auto;\n`;\n\nconst ContainerForm = styled.div`\n  background-color: #fff;\n  padding: 3rem;\n`;\n\nfunction App() {\n\n  const [summary,saveSummary] = useState({\n    quotation : 0,\n    data:{\n      brand: '',\n      year:'',\n      plan: ''\n    }\n  });\n\n  const [charging,saveCharging] = useState(false);\n\n  const {data ,quotation} = summary;\n\n  return (\n    <Container>\n      <Header \n        title='Cotizador de Seguros'\n      />\n\n      <ContainerForm>\n        <Form \n          saveSummary={saveSummary}\n          saveCharging={saveCharging}\n        />\n        {charging ?  <Spinner/> : null}\n        <Summary\n          data={data}\n        />\n        {!charging ?\n          <Result\n            quotation={quotation}\n          />\n        : null\n      }\n      </ContainerForm>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}